// FileTransferServer.java - Server Side
import java.io.*;
import java.net.*;

public class FileTransferServer {
    private static final int PORT = 6000;
    private static final String FILE_PATH = "sample.txt";

    public static void main(String[] args) {
        try (ServerSocket serverSocket = new ServerSocket(PORT)) {
            System.out.println("Server is listening on port " + PORT);

            while (true) {
                try (Socket socket = serverSocket.accept();
                     FileInputStream fis = new FileInputStream(FILE_PATH);
                     BufferedInputStream bis = new BufferedInputStream(fis);
                     OutputStream os = socket.getOutputStream()) {

                    System.out.println("Client connected: " + socket.getInetAddress());
                    byte[] buffer = new byte[4096];
                    int bytesRead;

                    while ((bytesRead = bis.read(buffer)) != -1) {
                        os.write(buffer, 0, bytesRead);
                    }
                    os.flush();
                    System.out.println("File sent successfully.");
                } catch (IOException e) {
                    System.err.println("Error handling client: " + e.getMessage());
                }
            }
        } catch (IOException e) {
            System.err.println("Server error: " + e.getMessage());
        }
    }
}

// FileTransferClient.java - Client Side
import java.io.*;
import java.net.*;

public class FileTransferClient {
    private static final String SERVER_IP = "127.0.0.1";
    private static final int SERVER_PORT = 6000;
    private static final String SAVE_PATH = "received_sample.txt";

    public static void main(String[] args) {
        try (Socket socket = new Socket(SERVER_IP, SERVER_PORT);
             InputStream is = socket.getInputStream();
             FileOutputStream fos = new FileOutputStream(SAVE_PATH);
             BufferedOutputStream bos = new BufferedOutputStream(fos)) {
            
            System.out.println("Connected to server, receiving file...");
            byte[] buffer = new byte[4096];
            int bytesRead;

            while ((bytesRead = is.read(buffer)) != -1) {
                bos.write(buffer, 0, bytesRead);
            }
            bos.flush();
            System.out.println("File received successfully.");
        } catch (IOException e) {
            System.err.println("Client error: " + e.getMessage());
        }
    }
}
